# compose.yml

x-pubdb-env: &pubdb_env
  RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
  PUBDB_DATABASE_HOST: postgres
  PUBDB_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
  PUBDB_DATABASE_USERNAME: ${PUBDB_DATABASE_USERNAME}
  SECRET_KEY_BASE: ${SECRET_KEY_BASE}
  ENTRA_CLIENT_ID: ${ENTRA_CLIENT_ID}
  ENTRA_CLIENT_SECRET: ${ENTRA_CLIENT_SECRET}
  ENTRA_TENANT_ID: ${ENTRA_TENANT_ID}
  OUTLOOK_USERNAME: ${OUTLOOK_USERNAME}
  OUTLOOK_PASSWORD: ${OUTLOOK_PASSWORD}
  AZCOPY_LINK: ${AZCOPY_LINK}

services:
  postgres:
    restart: unless-stopped
    image: postgres:14.2
    environment:
      POSTGRES_USER: pubdb
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - kpi-postgres:/var/lib/postgresql/data

  pubdb:
    restart: unless-stopped
    build: ./SanoPublicationDB
    depends_on:
      - postgres
    environment:
      <<: *pubdb_env
      VIRTUAL_HOST: kpi.sano.science
      VIRTUAL_PORT: "3000"
    ports:
      - "3000:3000"

  pubdb-scheduler:
    restart: unless-stopped
    build: ./SanoPublicationDB
    depends_on:
      - postgres
    user: "0:0"
    environment:
      <<: *pubdb_env
    command: ["/rails/bin/cron"]

  kpi-dashboard-prod:
    restart: unless-stopped
    container_name: "kpi-dashboard-prod"
    build: ./kpi_dashboard
    depends_on:
      - pubdb
    ports:
      - "3010:3000"
    environment:
      NODE_ENV: production
      API_HOST: pubdb:3000

volumes:
  kpi-postgres:
  nginx-certs:
  nginx-vhost:
  nginx-html:
